{
    "version": "https://jsonfeed.org/version/1",
    "title": "寂林的小窝 • All posts by \"course\" tag",
    "description": "飒飒西风满院栽,蕊寒香冷蝶难来",
    "home_page_url": "https://jilinJL.github.io",
    "items": [
        {
            "id": "https://jilinjl.github.io/courses/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/",
            "url": "https://jilinjl.github.io/courses/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/",
            "title": "软件项目管理",
            "date_published": "2023-05-12T02:05:15.641Z",
            "content_html": "<h1 id=\"软件项目管理大纲\"><a class=\"markdownIt-Anchor\" href=\"#软件项目管理大纲\">#</a> 软件项目管理大纲</h1>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161009610.png\" alt=\"Rat\" style=\"zoom: 15%;\" />\n<h3 id=\"1项目和项目管理的基本概念\"><a class=\"markdownIt-Anchor\" href=\"#1项目和项目管理的基本概念\">#</a> 1. 项目和项目管理的基本概念</h3>\n<p><strong>项目定义</strong>： 项目是为了创造一个<strong>唯一</strong>的产品或提供一个唯一的服务而进行的<strong>临时性</strong>的努力。</p>\n<p><strong>项目管理定义</strong>： 项目管理是一系列伴随着项目进行而进行的，<strong>确保项目能达到期望结果</strong>的一系列管理行为。<br>\n<strong>项目管理过程</strong>：<mark>启动、计划、执行、控制与收尾</mark></p>\n<p><strong>项目管理三维约束</strong>：<mark>范围 、 时间 、 成本。</mark><br>\n<strong>项目风险三要素</strong>：1. 风险事件的存在； 2. 风险事件发生的概率； 3. 风险事件可能带来的损失。</p>\n<p><strong>软件项目管理包含哪些内容</strong>：范围管理、成本管理、时间管理、人员管理、风险管理</p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161021328.png\" alt=\"image-20221116102120237\" style=\"zoom: 67%;\" />\n<hr>\n<h3 id=\"2项目的确立\"><a class=\"markdownIt-Anchor\" href=\"#2项目的确立\">#</a> 2. 项目的确立</h3>\n<ol>\n<li>\n<p><strong>瀑布模型</strong>： 阶段间具有顺序性和依赖性：必须等前一阶段的工作完成之后，才能开始后一阶段的输入。对本阶段工作进行评审，若得到确认，则继续下阶段工作。</p>\n<p>适用于 <strong>需求明确，线性工作流程的短期项目</strong></p>\n</li>\n<li>\n<p><strong>原型模型</strong>：开发原型了解需求，原型模型减少了软件需求不明确带来的风险。<br>\n适用于 <strong>用户需求不确定，需要人机交互。</strong></p>\n</li>\n<li>\n<p><strong>螺旋模型</strong>：风险驱动的，每一阶段一个螺旋，不断完善项目。<br>\n适用于 <strong>大型项目，对风险比较关注的项目。</strong></p>\n</li>\n<li>\n<p><strong>增量模型</strong>：融合了瀑布模型的基本成分和原型的迭代特征。采用随着日程时间的进展而交错的线性序列。把软件产品作为一系列的增量构件来分析、设计、编码、测试和发布。<br>\n适用于 <strong>需求基本明确，可能发生变化，系统逐步改造的项目。</strong></p>\n</li>\n<li>\n<p>V<strong> 模型</strong>：v-model 改进了瀑布模型，在软件开发的生存期，其 <code>开发活动</code> 和 <code>测试活动</code> 几乎同时的开始，这两个并行的动态的过程就会极大的较少 bug 和 error 出现的几率。<br>\n适用于 <strong>需求明确，系统性能、安全等有严格要求。</strong></p>\n</li>\n</ol>\n<h4 id=\"scrum敏捷开发\"><a class=\"markdownIt-Anchor\" href=\"#scrum敏捷开发\">#</a> scrum 敏捷开发：</h4>\n<p>​\t\tScrum 是敏捷开发方式的一种。Scrum 强调沟通，要求团队所有人坐在一起工作，通过高效沟通解决问题， 并且敏强调周期很短地交付可工作的软件成果。</p>\n<p><strong>敏捷宣言</strong>:<strong> 个体和互动</strong> 高于 流程和工具<br>\n<strong>工作的软件</strong> 高于 详尽的文档<br>\n<strong>客户合作</strong> 高于 合同谈判<br>\n<strong>响应变化</strong> 高于 遵循计划</p>\n<p>另外<strong> 12 条原则</strong>总结为：<strong>尽早交付，响应变化，周期求短，激发个体，业务合作，简洁为本，追求成果，定期反思，面谈交流，优化设计。</strong></p>\n<p><strong>极限编程</strong>：小规模发布，策划活动、隐喻、简单设计、测试和编码一起进行、重构、结对编程，持续集成</p>\n<h4 id=\"项目立项过程\"><a class=\"markdownIt-Anchor\" href=\"#项目立项过程\">#</a> 项目立项过程：</h4>\n<p>​\t识别项目→论证项目→项目评估报告→申请项目→立项建议书→申请审核→确立项目 ****<br>\n<strong> 目的：</strong> 明确项目的<em>目标、时间表、项目使用的资源和经费</em>，而且得到项目经理和项目发起人的认可。</p>\n<h4 id=\"招标阶段任务\"><a class=\"markdownIt-Anchor\" href=\"#招标阶段任务\">#</a> 招标阶段任务：</h4>\n<p>​\t甲方：招标书定义、供方选择、合同签署。<br>\n​\t乙方：进行项目选择、投标、合同签署。</p>\n<h4 id=\"需求管理的过程\"><a class=\"markdownIt-Anchor\" href=\"#需求管理的过程\">#</a> *<mark> 需求管理的过程：</mark></h4>\n<p>​\t<strong>需求获取 → 需求分析 (原型，用例、流程图) → 需求规格编写 → 需求验证 → 需求变更</strong></p>\n<hr>\n<h3 id=\"3wbs\"><a class=\"markdownIt-Anchor\" href=\"#3wbs\">#</a> 3.WBS</h3>\n<p><strong>结构分解的工具是工作分解结构 WBS</strong> (Work Breakdown Structure)，它是一个<strong>分级的树型结构</strong>，是将项目按照其内在结构或实施过程的顺序进行逐层分解而形成的结构示意图。</p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160957548.png\" alt=\"image-20221115093951653\" style=\"zoom:50%;\" />\n<h4 id=\"wbs设计的主要方法\"><a class=\"markdownIt-Anchor\" href=\"#wbs设计的主要方法\">#</a> WBS 设计的主要方法：</h4>\n<p>​\t类比法、自上而下法、自下而上法。</p>\n<h4 id=\"范围核实\"><a class=\"markdownIt-Anchor\" href=\"#范围核实\">#</a> 范围核实：</h4>\n<p>​\t项目干系人对项目范围的正式承认。</p>\n<h4 id=\"范围变更\"><a class=\"markdownIt-Anchor\" href=\"#范围变更\">#</a> 范围变更：</h4>\n<p>​\t通过识别和确定项目目标和项目主要产出物，明确项目的具体实施方案，确定项目的工作范围。</p>\n<p><strong>范围管理相关案例</strong>：<a href=\"#%E8%8C%83%E5%9B%B4%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B\">见本篇最底部</a>（按住 Ctrl 点击）</p>\n<hr>\n<h3 id=\"4成本因素\"><a class=\"markdownIt-Anchor\" href=\"#4成本因素\">#</a> 4. 成本因素</h3>\n<p>要求：常见成本估计方法：列举五种即可</p>\n<p>基于问题的估算：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>S</mi><mtext> </mtext><mi>o</mi><mi>p</mi><mo>+</mo><mn>4</mn><mi>S</mi><mtext> </mtext><mi>m</mi><mo>+</mo><mi>S</mi><mtext> </mtext><mi>p</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">S=(S~op+4S~m+S~pess)/6\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace nobreak\"> </span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace nobreak\"> </span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace nobreak\"> </span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">6</span></span></span></span></span></p>\n<ol>\n<li>\n<p><strong>代码行估算法</strong>：从软件程序量的角度定义项目规模；</p>\n</li>\n<li>\n<p><strong>功能点估算法</strong>:q 通过评估、加权、量化得出功能点；FP =UFC*TCF;</p>\n<p>UFC：未调整功能点计数 TCF：技术复杂度因子；</p>\n</li>\n<li>\n<p><strong>用例点估算法</strong>：根据用例模型，计算工作量；</p>\n</li>\n<li>\n<p><strong>类比 (自顶向下) 估算</strong>： 根据历史数据；</p>\n</li>\n<li>\n<p><strong>自下而上估算 WBS</strong>：根据 WBS 细分的任务活动</p>\n</li>\n<li>\n<p><strong>参数估算法</strong>： E= a+b*Sc</p>\n</li>\n<li>\n<p><strong>专家估算法</strong>：组织者计算每位专家的 Ei=(ai+4mi+bi)/6</p>\n</li>\n</ol>\n<hr>\n<p><a href=\"#%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2\">👆回到顶部</a>–按住 Ctrl 点击回到顶部👆👆</p>\n<h3 id=\"5风险规划\"><a class=\"markdownIt-Anchor\" href=\"#5风险规划\">#</a> 5. 风险规划</h3>\n<p>​\t\t针对风险分析的结果，为提高实现项目目标的机会，降低风险的负面影响而制定风险应对策略和应对措施的过程，即制定一定的行动和策略来对付、减少、以至于消灭风险事件造成的影响。</p>\n<p><strong>常见风险</strong>：</p>\n<p>(1) 合同风险<br>\n (2) 需求变更风险<br>\n (3) 沟通不良风险<br>\n (4) 进度风险<br>\n (5)) 人员流动风险<br>\n (6) 分包商风险<br>\n (7) 质量风险</p>\n<p><strong>主要策略：</strong>(选择题判断是哪种风险)</p>\n<p>①接受风险： 小风险，或者采取措施后投入的成本比风险发生后的损失还多。</p>\n<p>②规避风险： 对风险有足够的认识，尽可能的规避，采取主动放弃或者拒绝使用导致风险的方案。</p>\n<p>③缓解和降低风险：采取措施，降低风险的发生可能性。</p>\n<p>④转移风险：将损失转嫁出去，如：分包，开脱责任合同，准备保险。</p>\n<hr>\n<h3 id=\"6进度管理\"><a class=\"markdownIt-Anchor\" href=\"#6进度管理\">#</a> 6. 进度管理</h3>\n<h4 id=\"图示\"><a class=\"markdownIt-Anchor\" href=\"#图示\">#</a> 图示</h4>\n<ol>\n<li>\n<p>网络图： 了解<strong>单代号网络图</strong>；<strong>双代号网络图</strong></p>\n <img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160957302.png\" alt=\"image-20221116083405216\" style=\"zoom:50%;\" />\n <img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160957388.png\" alt=\"image-20221116083353305\" style=\"zoom:50%;\" />\n</li>\n<li>\n<p>甘特图：了解<strong>甘特图</strong>画法</p>\n <img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160957757.png\" alt=\"image-20221116083442217\" style=\"zoom:50%;\" />\n</li>\n<li>\n<p>里程碑图： 了解里程碑的概念（里程碑的工期为 0）</p>\n <img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160957531.png\" alt=\"image-20221116083327089\" style=\"zoom: 50%;\" />\n</li>\n<li>\n<p>资源图： 稍微了解一下</p>\n <img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160958182.png\" alt=\"image-20221116083457334\" style=\"zoom:50%;\" />\n</li>\n</ol>\n<h4 id=\"任务四种关系\"><a class=\"markdownIt-Anchor\" href=\"#任务四种关系\">#</a> 任务四种关系</h4>\n<p><strong>1、FS (完成 - 开始) 关系：</strong></p>\n<p>必须先完成任务 A，然后任务 B 才能开始。</p>\n<p><strong>2、SS (开始 - 开始) 关系</strong></p>\n<p>如果任务 A 没有开始，那么任务 B 也无法开始。</p>\n<p><strong>3、FF (完成 - 完成) 关系</strong></p>\n<p>任务 A 的完成日期决定任务 B 的完成日期</p>\n<p><strong>4、SF (开始 - 完成) 关系</strong></p>\n<p>任务 A 的开始日期决定任务 B 的完成日期。现实中发生频率较其它关系低.</p>\n<p>软件的使用过程中，常用的关联关系是 FS (完成 - 开始) 关系、SS (开始 - 开始) 关系两种。其他关系的使用按实际需求来选择。</p>\n<hr><hr>\n<h4 id=\"相关计算-关键路径-浮动时间很重要\"><a class=\"markdownIt-Anchor\" href=\"#相关计算-关键路径-浮动时间很重要\">#</a> <mark>相关计算：</mark> （关键路径、浮动时间）<strong>很重要</strong></h4>\n<h4 id=\"进度计划参考资料\"><a class=\"markdownIt-Anchor\" href=\"#进度计划参考资料\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MjAyNjU1ODk=\">进度计划参考资料</span> 按 Ctrl + 左键打开</h4>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161017091.png\" alt=\"image-20221116101726009\"></p>\n<hr><hr>\n[👆回到顶部](#软件项目管理复习大纲)--按住 Ctrl 点击回到顶部👆👆\n<h3 id=\"范围管理案例\"><a class=\"markdownIt-Anchor\" href=\"#范围管理案例\">#</a> 范围管理案例</h3>\n<p><strong>(会考类似题目！)</strong></p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160954155.png\" alt=\"image-20221116085959313\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160954196.png\" alt=\"image-20221116090204851\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160954989.png\" alt=\"image-20221116090216754\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160954925.png\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160954323.png\" alt=\"image-20221116090250136\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160955788.png\" alt=\"image-20221116091516702\" style=\"zoom:150%;\" />\n<hr>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160955309.png\" alt=\"image-20221116091604458\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160955390.png\" alt=\"image-20221116091613666\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160955605.png\" alt=\"image-20221116091622675\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211160955163.png\" alt=\"image-20221116091635361\" style=\"zoom:150%;\" />\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161030812.png\" alt=\"image-20221116103058727\" style=\"zoom:150%;\" />\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161032140.png\" alt=\"image-20221116103219081\"></p>\n<p>这是一个成功的项目管理案例，项’目经理张工有效的运用范围管理，在不同的项目干系人中达成一致，使项目的结果同时满足了高层经理、客户和项目组成员的要求。</p>\n<p>作为一个项目管理者，必须熟练掌握和应用项目管理九大领域涵盖的知识与技能，对于进行信息系统开发项目而言，范围管理是其中最重要的技能之一。</p>\n<p>软件项目的范围主要是由系统需求构成的，而系统需求既是难以把握的，也是容易调整和控制的。软件系统的需求来源于用户需求，在软件项目目标是满足用户需求的情况下，对于相同的用户价值可以定义出不同的系统需求。</p>\n<p>在本案例中，高层经理 S 就提出了试图打破这个三角形的要求。他要求，项目组可以增加部分资源，但要提前两个月完成。初一看，并没有在不增加投入的情况下要求项目提前完成，似乎合情合理，比起既要马儿跑又不让马儿吃草的要求好得多，但细一想，增加的资源和提前的时间还是不成比例。项目经理张工深知此中奥妙，因此在听到高层经理的要求后，马上意识到这是一个不可能完成的任务。</p>\n<p>那么该如何解决这个矛盾呢？还是要从这个三角形入手。既然时间和资源的变化已经打破了项目规律，那么不妨根据新的时间和资源来重新划定合理的项目范围，保证项目的正常运作。于是，张工将这个项目拆分为两部分，重新定义这两部分的项目范围，使每一部分的范围都可以与已经确定的资源和时间匹配起来，让项目的运作又重新满足了项目的客观规律，最终取得了成功。</p>\n<p>在案例中，还有一些细节需要考生注意。张工最初估算整个项目需要花费 60 人月的总工作量，但如果考虑到拆分为两个阶段后会增加设计的复杂度，增加了额外的验收过程等因素，超出原计划半个月是正常的。计划在 6 个月内完成。在把项目拆分后，实际是用了 6 个半月的时间，也就是花费了 65 人月完成了项目。对于上面介绍的时间、成本和范围的关系而言，仅是在理想情况下成立，即项目成员始终能以固定的成本完成固定的工作。而在实际情况下，项目的工期、复杂度等因素都会对项目造成影响。在案例中，虽然看似两部分工作的总和等于没有拆分前的项目，但这仅对于最终目标而言，拆分后的项目增加了若干中间成果，项目的范围实际上还是扩大了。</p>\n<p>因为软件项目的范围直接与需求相关，所以，很多人误认为控制项目范围就是控制需求，而控制的方法就是减少需求的内容。这种理解是完全错误的。</p>\n<p>范围控制体现在软件开发的各个阶段，很多范围控制并非是针对客户的要求而进行的。例如，本案例中，范围控制就是针对高层经理的要求进行的。再比如，在设计中，我们既可以设计刚刚够用甚至略有欠缺，通过牺牲系统的扩展性、维护性等方面来简化设计，也可以对系统进行充分良好的设计，甚至可能是过度设计。采取哪一种设计策略也是软件项目范围管理的一部分。项目经理可以根据目前的项目的目标与环境出发，综合考虑质量和成本的约束，制定明确的项目范围，保证项目的成功。根据笔者的经验，即时需求已经确定，通过有效的范围管理仍能给项目带来很大的收益，可以在不牺牲软件质量的前提下通过范围管理来降低项目成本，缩短项目工期。</p>\n<p>上面主要针对张工在范围控制方面进行了分析，实际在整个案例中，张工还进行了其他的范围管理工作。</p>\n<p>首先，在项目刚刚开始，张工就对项目范围进行了定义，进而划分了 WBS 并对项目进行了估算和计划。在 S 提出需要缩短工期的要求后，张工首先进行了项目范围的控制，缩小了第一步需要完成的项目范围。紧接着张工又对两阶段需要完成的项目范围进行了重新定义，制定了验收标准。最后，张工对重新定义的范围进行了确认，与客户和高层经理达成一致。</p>\n<p>对于项目而言，仅仅管理范围仍不能保证项目的成功。在这个案例中，张工也运用了其他的管理手段。其中包括，张工对项目进行了估算，这属于项目时间管理的范畴；张工协调了多个项目干系人之间的矛盾，这属于沟通管理的范畴。</p>\n<p>有了上面的分析，这道考题的答案也就很清晰了。</p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202211161033148.png\" alt=\"image-20221116103343082\" style=\"zoom:150%;\" />\n<p><a href=\"#3.WBS\">👆回到范围管理</a>（按住 Ctrl 点击） <a href=\"#3.WBS\">👆回到范围管理</a>（按住 Ctrl 点击） <a href=\"#3.WBS\">👆回到范围管理</a>（按住 Ctrl 点击）</p>\n",
            "tags": [
                "course"
            ]
        },
        {
            "id": "https://jilinjl.github.io/courses/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",
            "url": "https://jilinjl.github.io/courses/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",
            "title": "软件体系结构",
            "date_published": "2023-05-12T02:05:15.639Z",
            "content_html": "<p>[TOC]</p>\n<h1 id=\"软件体系结构\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构\">#</a> 软件体系结构</h1>\n<h2 id=\"1概念\"><a class=\"markdownIt-Anchor\" href=\"#1概念\">#</a> 1. 概念</h2>\n<h3 id=\"共性\"><a class=\"markdownIt-Anchor\" href=\"#共性\">#</a> 共性</h3>\n<ol>\n<li>构件</li>\n<li>连接件</li>\n<li>物理分布</li>\n<li>约束</li>\n<li>性能</li>\n</ol>\n<h3 id=\"为什么需要软件体系结构\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要软件体系结构\">#</a> 为什么需要软件体系结构</h3>\n",
            "tags": [
                "course"
            ]
        }
    ]
}