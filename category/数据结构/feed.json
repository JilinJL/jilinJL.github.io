{
    "version": "https://jsonfeed.org/version/1",
    "title": "寂林のへや • All posts by \"数据结构\" category",
    "description": "人工智能,web前端,软件开发",
    "home_page_url": "https://jilinJL.github.io",
    "items": [
        {
            "id": "https://jilinjl.github.io/data-structure/8.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",
            "url": "https://jilinjl.github.io/data-structure/8.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",
            "title": "JS数据结构-二叉搜索树",
            "date_published": "2023-05-12T02:05:15.669Z",
            "content_html": "<h2 id=\"二叉搜索树\"><a class=\"markdownIt-Anchor\" href=\"#二叉搜索树\">#</a> 二叉搜索树</h2>\n<p><strong>二叉树定义</strong></p>\n<blockquote>\n<p>二叉树中的节点最多只能有两个子节点：一个是左侧子节点，另一个是右侧子节点。这个定义有助于我们写出更高效地在树中插入、查找和删除节点的算法。二叉树在计算机科学中的应用非常广泛。</p>\n</blockquote>\n<p><strong>二叉树种类</strong></p>\n<blockquote>\n<p>普通<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTQlQkElOEMlRTUlOEYlODklRTYlQTAlOTEmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">二叉树</span>、完全二叉树、满二叉树、线索二叉树、哈夫曼树、二叉搜索树（排序树）、平衡二叉树、AVL 平衡二叉树、红黑树、B 树、B + 树</p>\n</blockquote>\n<p><strong>二叉搜索树</strong></p>\n<blockquote>\n<p>二叉搜索树（BST）是二叉树的一种，但是只允许你在左侧节点存储（比父节点）小的值，在右侧节点存储（比父节点）大的值。</p>\n</blockquote>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303090523796.png\" alt=\"image-20230303090523796\" style=\"zoom: 67%;\" />\n<hr>\n<h5 id=\"不认识二叉这俩字了这里先只模拟二叉搜索树\"><a class=\"markdownIt-Anchor\" href=\"#不认识二叉这俩字了这里先只模拟二叉搜索树\">#</a> 不认识 &quot;二叉&quot; 这俩字了… 这里先只模拟二叉搜索树</h5>\n<h5 id=\"啥-你问我为啥\"><a class=\"markdownIt-Anchor\" href=\"#啥-你问我为啥\">#</a> 啥？你问我为啥？</h5>\n<h5 id=\"因为书上只讲了二叉搜索树\"><a class=\"markdownIt-Anchor\" href=\"#因为书上只讲了二叉搜索树\">#</a> 因为书上只讲了二叉搜索树🤪</h5>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>❑ insert(key)</td>\n<td>向树中插入一个新的键</td>\n</tr>\n<tr>\n<td>❑ search(key)</td>\n<td>在树中查找一个键。如果节点存在，则返回 true；如果不存在，则返回 false</td>\n</tr>\n<tr>\n<td>❑ inOrderTraverse()</td>\n<td>通过中序遍历方式遍历所有节点</td>\n</tr>\n<tr>\n<td>❑ preOrderTraverse()</td>\n<td>通过先序遍历方式遍历所有节点</td>\n</tr>\n<tr>\n<td>❑ postOrderTraverse()</td>\n<td>通过后序遍历方式遍历所有节点</td>\n</tr>\n<tr>\n<td>❑ min()</td>\n<td>返回树中最小的值 / 键</td>\n</tr>\n<tr>\n<td>❑ max()</td>\n<td>返回树中最大的值 / 键</td>\n</tr>\n<tr>\n<td>❑ remove(key)</td>\n<td>从树中移除某个键</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>废话少说，直接上代码！(因为写的时候全写注释里面了，所以主要看注释内容哦)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 先定义节点类, 有存储值key  有左节点left  有右节点right</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">key</span> = key</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">left</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">right</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义二叉树类, 有一个根节点,默认为null</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BinarySearchTree</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">root</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入节点\"><a class=\"markdownIt-Anchor\" href=\"#插入节点\">#</a> 插入节点</h3>\n<p>直接开始！注意其中的<mark>递归</mark>！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//插入节点的方法 </span></span><br><span class=\"line\"><span class=\"title function_\">insertNode</span>(<span class=\"params\">node,key</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node.<span class=\"property\">left</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      node.<span class=\"property\">left</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(node.<span class=\"property\">left</span>, key)\t<span class=\"comment\">//比较发现小了? 递归往左</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node.<span class=\"property\">right</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      node.<span class=\"property\">right</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(node.<span class=\"property\">right</span>, key)\t<span class=\"comment\">//比较发现大了? 递归往右</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 插入key\t判断根节点如果都没有?那直接新建节点作为根节点,key存进去</span></span><br><span class=\"line\"><span class=\"title function_\">insert</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h4>\n<p>在看得出来二叉搜索树中需要大量的比较，小于 root 去左边，大于 root 去右边，那查找也不例外了，小于 root 去左边找。大于再去右边找，直到等于某个 key, 既然一直要做各种比较，我们把比较的过程封装成一个函数.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//封装比较</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compare</span>(<span class=\"params\">key, node</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(node === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &gt; node.<span class=\"property\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &lt; node.<span class=\"property\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>大概这样子👺 我懒得写了，让 chatGPT 写的…<br>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303091718968.png\" alt=\"image-20230303091718968\"></p>\n<h3 id=\"查询节点\"><a class=\"markdownIt-Anchor\" href=\"#查询节点\">#</a> 查询节点</h3>\n<p>查询也类似 同样是递归</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查询节点的方法</span></span><br><span class=\"line\"><span class=\"title function_\">searchNode</span>(<span class=\"params\">node,key</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(node === <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(node.<span class=\"property\">left</span>,key)</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(node.<span class=\"property\">right</span>,key)</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//查询key</span></span><br><span class=\"line\"><span class=\"title function_\">search</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>早上 7:08 早起准备开始学习，时间真的很宝贵，洗漱的时候开了热水，放出来的全是冷水，还扣我 2 毛 5 太坑了！等我有钱了一定要有一个 24 小时热水的家！就像 汪峰在《春天里》唱的那样（emm 好像是这个歌名吧…）看来汪峰也经历过洗冷水的痛</em></p>\n<p>下面就全是递归！地柜！递龟！😵😵😵</p>\n<h3 id=\"遍历\"><a class=\"markdownIt-Anchor\" href=\"#遍历\">#</a> 遍历</h3>\n<h4 id=\"中序\"><a class=\"markdownIt-Anchor\" href=\"#中序\">#</a> 中序</h4>\n<blockquote>\n<p>中序遍历是一种以上行顺序访问 BST 所有节点的遍历方式，也就是以 <code>从小到大</code> 的顺序访问所有节点。</p>\n</blockquote>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303083706397.png\" alt=\"image-20230303083706397\" style=\"zoom:67%;\" />\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//中序遍历节点</span></span><br><span class=\"line\"><span class=\"title function_\">inOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>) <span class=\"comment\">// 3 5 6 7 8 9 10 11...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//中序遍历</span></span><br><span class=\"line\"><span class=\"title function_\">inOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"先序\"><a class=\"markdownIt-Anchor\" href=\"#先序\">#</a> 先序</h4>\n<blockquote>\n<p>先序遍历是以 <code>优先于</code> 后代节点的顺序访问每个节点的。先序遍历的一种应用是打印一个结构化的文档。</p>\n</blockquote>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303083735420.png\" alt=\"image-20230303083735420\" style=\"zoom:67%;\" />\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先序遍历节点</span></span><br><span class=\"line\"><span class=\"title function_\">preOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>)\t<span class=\"comment\">// 11 7 5 3 6 9 8 10 15 ...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//先序遍历</span></span><br><span class=\"line\"><span class=\"title function_\">preOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"后序\"><a class=\"markdownIt-Anchor\" href=\"#后序\">#</a> 后序</h4>\n<blockquote>\n<p>后序遍历则是先访问节点的后代节点，再访问节点本身。后序遍历的一种应用是计算一个目录及其子目录中所有文件所占空间的大小。</p>\n</blockquote>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303084820414.png\" alt=\"image-20230303084820414\" style=\"zoom:67%;\" />\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//后序遍历节点</span></span><br><span class=\"line\"><span class=\"title function_\">postOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//后序遍历</span></span><br><span class=\"line\"><span class=\"title function_\">postOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h4>\n<blockquote>\n<p>哈哈哈当初数据结构听得云里雾里，现在倒是发现了，先序后序中序就是 callback 回调在节点遍历时放的位置不同</p>\n<p>就像八卦一样</p>\n<p>乾 (☰)  坤 (☷)  震 (☳)  艮 (☶) gèn  离 (☲)  坎 (☵)  兑 (☱)  巽 (☴) xùn</p>\n</blockquote>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303085824554.png\" alt=\"八卦\"></p>\n<p>各位看官！看 <mark>离卦 兑卦 巽卦</mark>像不像 <strong>中序，先序，后序</strong>？(好吧确实很抽象)</p>\n<blockquote>\n<p>另外：以上方法全部都是分开写的，比如 (<strong>xx 遍历，xx 遍历节点</strong>)</p>\n<p>之所以这样，是因为正常情况需要把遍历节点的方法作为 private 方法，不能让用户访问或者修改</p>\n<p>只应该向用户暴露 <strong>xx 遍历</strong> 方法 而不展示内部细节</p>\n<p>这里用的是 JS 就当是处理过了吧已经 知道这个概念就行</p>\n</blockquote>\n<h3 id=\"言归正传来看搜索节点最大值最小值\"><a class=\"markdownIt-Anchor\" href=\"#言归正传来看搜索节点最大值最小值\">#</a> 言归正传，来看搜索节点最大值最小值</h3>\n<p>先看图</p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303092501119.png\" alt=\"image-20230303092501119\" style=\"zoom: 67%;\" />\n<p>你能在三秒钟之内找到最小值和最大值吗？</p>\n<p>啥？你一秒就好了？你真行！</p>\n<p>但计算机比你更行，都知道是最左边节点和最右边节点嘛，因为插入节点时就排好序了</p>\n<p>直接上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//搜索最小值</span></span><br><span class=\"line\"><span class=\"title function_\">min</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">minNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//搜索最小节点</span></span><br><span class=\"line\"><span class=\"title function_\">minNode</span>(<span class=\"params\">node</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> current = node</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(current != <span class=\"literal\">null</span> &amp;&amp; current.<span class=\"property\">left</span> != <span class=\"literal\">null</span>)&#123;\t<span class=\"comment\">// 持续往左找,直到最左</span></span><br><span class=\"line\">    current = current.<span class=\"property\">left</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> current</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//搜索最大值</span></span><br><span class=\"line\">  <span class=\"title function_\">max</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">maxNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//搜索最大节点</span></span><br><span class=\"line\"><span class=\"title function_\">maxNode</span>(<span class=\"params\">node</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> current = node</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(current != <span class=\"literal\">null</span> &amp;&amp; current.<span class=\"property\">right</span> != <span class=\"literal\">null</span>)&#123;\t<span class=\"comment\">// 持续往右找,直到最右(不是那个最右)</span></span><br><span class=\"line\">    current = current.<span class=\"property\">right</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> current</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后-remove~\"><a class=\"markdownIt-Anchor\" href=\"#最后-remove~\">#</a> 最后  remove~!</h3>\n<p>太麻烦了，懒得解释了</p>\n<p>三种情况:</p>\n<blockquote>\n<ol>\n<li>要删除的节点是最底层节点：直接赋 null</li>\n<li>要删除的节点有一个子节点：直接让该节点的父节点的 left 或者 right 指向这个子节点</li>\n<li>要删除的节点有两个子节点：我没法简述了 看原文</li>\n</ol>\n<p>(1) 当找到了要移除的节点后，需要找到它右边子树中最小的节点（它的继承者<br>\n (2) 然后，用它右侧子树中最小节点的键去更新这个节点的值。通过这一步，我们改变了这个节点的键，也就是说它被移除了。<br>\n(3) 但是，这样在树中就有两个拥有相同键的节点了，这是不行的。要继续把右侧子树中的最小节点移除，毕竟它已经被移至要移除的节点的位置了。<br>\n(4) 最后，向它的父节点返回更新后节点的引用。findMinNode 方法的实现和 min 方法的实现方式是一样的。唯一的不同之处在于，在 min 方法中只返回键，而在 findMinNode 中返回了节点。</p>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/image-20230303094426335.png\" alt=\"image-20230303094426335\" style=\"zoom:50%;\" />\n</blockquote>\n<p>全部代码… 知道原理就行，真不想写了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">key</span> = key</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">left</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">right</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//封装比较</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compare</span>(<span class=\"params\">key, node</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(node === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &gt; node.<span class=\"property\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &lt; node.<span class=\"property\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BinarySearchTree</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">compareFn=compare</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">compareFn</span> = compareFn</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">root</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//插入节点的方法</span></span><br><span class=\"line\">  <span class=\"title function_\">insertNode</span>(<span class=\"params\">node,key</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(node.<span class=\"property\">left</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        node.<span class=\"property\">left</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(node.<span class=\"property\">left</span>, key)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(node.<span class=\"property\">right</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        node.<span class=\"property\">right</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(node.<span class=\"property\">right</span>, key)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 插入key</span></span><br><span class=\"line\">  <span class=\"title function_\">insert</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(key)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">insertNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索节点的方法</span></span><br><span class=\"line\">  <span class=\"title function_\">searchNode</span>(<span class=\"params\">node,key</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node === <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(node.<span class=\"property\">left</span>,key)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key,node)&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(node.<span class=\"property\">right</span>,key)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索key</span></span><br><span class=\"line\">  <span class=\"title function_\">search</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">searchNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//中序遍历节点</span></span><br><span class=\"line\">  <span class=\"title function_\">inOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">      <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">  <span class=\"title function_\">inOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">inOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//先序遍历节点</span></span><br><span class=\"line\">  <span class=\"title function_\">preOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//先序遍历</span></span><br><span class=\"line\">  <span class=\"title function_\">preOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">preOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//后序遍历节点</span></span><br><span class=\"line\">  <span class=\"title function_\">postOrderTraverseNode</span>(<span class=\"params\">node,callback</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(node!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(node.<span class=\"property\">left</span>,callback)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(node.<span class=\"property\">right</span>,callback)</span><br><span class=\"line\">      <span class=\"title function_\">callback</span>(node.<span class=\"property\">key</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">  <span class=\"title function_\">postOrderTraverse</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">postOrderTraverseNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索最小值</span></span><br><span class=\"line\">  <span class=\"title function_\">min</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">minNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>).<span class=\"property\">key</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索最小节点</span></span><br><span class=\"line\">  <span class=\"title function_\">minNode</span>(<span class=\"params\">node</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = node</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(current != <span class=\"literal\">null</span> &amp;&amp; current.<span class=\"property\">left</span> != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      current = current.<span class=\"property\">left</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索最大值</span></span><br><span class=\"line\">  <span class=\"title function_\">max</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">maxNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>).<span class=\"property\">key</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//搜索最大节点</span></span><br><span class=\"line\">  <span class=\"title function_\">maxNode</span>(<span class=\"params\">node</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = node</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(current != <span class=\"literal\">null</span> &amp;&amp; current.<span class=\"property\">right</span> != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      current = current.<span class=\"property\">right</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//删除节点</span></span><br><span class=\"line\">  <span class=\"title function_\">removeNode</span>(<span class=\"params\">node,key</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (node == <span class=\"literal\">null</span>) &#123; <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key, node.<span class=\"property\">key</span>)&lt;<span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">        node.<span class=\"property\">left</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeNode</span>(node.<span class=\"property\">left</span>, key)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">compareFn</span>(key, node.<span class=\"property\">key</span>)&gt;<span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">        node.<span class=\"property\">right</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeNode</span>(node.<span class=\"property\">right</span>, key)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 键等于node.key</span></span><br><span class=\"line\">        <span class=\"comment\">// 第一种情况</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">left</span> == <span class=\"literal\">null</span> &amp;&amp; node.<span class=\"property\">right</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          node = <span class=\"literal\">null</span>; </span><br><span class=\"line\">          <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 第二种情况</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">left</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          node = node.<span class=\"property\">right</span>; </span><br><span class=\"line\">          <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (node.<span class=\"property\">right</span> == <span class=\"literal\">null</span>) &#123; </span><br><span class=\"line\">          node = node.<span class=\"property\">left</span>; </span><br><span class=\"line\">          <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 第三种情况</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> aux = <span class=\"variable language_\">this</span>.<span class=\"title function_\">minNode</span>(node.<span class=\"property\">right</span>); </span><br><span class=\"line\">        node.<span class=\"property\">key</span> = aux.<span class=\"property\">key</span>; </span><br><span class=\"line\">        node.<span class=\"property\">right</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeNode</span>(node.<span class=\"property\">right</span>, aux.<span class=\"property\">key</span>); </span><br><span class=\"line\">        <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//删除方法</span></span><br><span class=\"line\">  <span class=\"title function_\">remove</span>(<span class=\"params\">key</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">root</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>,key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> bst = <span class=\"keyword\">new</span> <span class=\"title class_\">BinarySearchTree</span>()</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">bst.insert(x)</span></span><br><span class=\"line\"><span class=\"comment\">min</span></span><br><span class=\"line\"><span class=\"comment\">max</span></span><br><span class=\"line\"><span class=\"comment\">inOrderTraverse</span></span><br><span class=\"line\"><span class=\"comment\">remove</span></span><br><span class=\"line\"><span class=\"comment\">search</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"最后的最后\"><a class=\"markdownIt-Anchor\" href=\"#最后的最后\">#</a> 最后的最后</h3>\n<p>有这些基础知识就可以去看看平衡二叉树，红黑树之类</p>\n<p>不要把数据结构和算法划等号<span class=\"spoiler\" title=\"...\">前端一样需要学数据结构，而且算法也很重要</span></p>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/7.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%AD%97%E5%85%B8/",
            "url": "https://jilinjl.github.io/data-structure/7.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%AD%97%E5%85%B8/",
            "title": "JS数据结构-字典",
            "date_published": "2023-05-12T02:05:15.666Z",
            "content_html": "<h2 id=\"字典\"><a class=\"markdownIt-Anchor\" href=\"#字典\">#</a> 字典</h2>\n<blockquote>\n<p>❑ set (key, value)：向字典中添加新元素。如果 key 已经存在，那么已存在的 value 会被新的值覆盖。<br>\n❑ remove (key)：通过使用键值作为参数来从字典中移除键值对应的数据值。<br>\n❑ hasKey (key)：如果某个键值存在于该字典中，返回 true，否则返回 false。<br>\n❑ get (key)：通过以键值作为参数查找特定的数值并返回。<br>\n❑ clear ()：删除该字典中的所有值。<br>\n❑ size ()：返回字典所包含值的数量。与数组的 length 属性类似。<br>\n❑ isEmpty ()：在 size 等于零的时候返回 true，否则返回 false。<br>\n❑ keys ()：将字典所包含的所有键名以数组形式返回。<br>\n❑ values ()：将字典所包含的所有数值以数组形式返回。<br>\n❑ keyValues ()：将字典中所有 [键，值] 对返回。<br>\n❑ forEach (callbackFn)：迭代字典中所有的键值对。callbackFn 有两个参数：key 和 value。该方法可以在回调函数返回 false 时被中止（和 Array 类中的 every 方法相似）。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myToString = <span class=\"keyword\">function</span> (<span class=\"params\">item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;NULL&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;UNDEFINED&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> item === <span class=\"string\">&quot;string&quot;</span> || item <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;item&#125;</span>`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ValuePair</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">key, value</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">key</span> = key;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`[#<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.key&#125;</span>: <span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.value&#125;</span>]`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myMap</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">toStr = myToString</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">toStr</span> = toStr;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">table</span> = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">hasKey</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">table</span>[<span class=\"variable language_\">this</span>.<span class=\"title function_\">toStr</span>(key)] != <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">set</span>(<span class=\"params\">key, value</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key != <span class=\"literal\">null</span> &amp;&amp; value != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> tableKey = <span class=\"variable language_\">this</span>.<span class=\"title function_\">toStr</span>(key); <span class=\"comment\">// &#123;1&#125;</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">table</span>[tableKey] = <span class=\"keyword\">new</span> <span class=\"title class_\">ValuePair</span>(key, value); <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">get</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> valuePair = <span class=\"variable language_\">this</span>.<span class=\"property\">table</span>[<span class=\"variable language_\">this</span>.<span class=\"title function_\">toStr</span>(key)]; <span class=\"comment\">// &#123;1&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> valuePair == <span class=\"literal\">null</span> ? <span class=\"literal\">undefined</span> : valuePair.<span class=\"property\">value</span>; <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">remove</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">hasKey</span>(key)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> <span class=\"variable language_\">this</span>.<span class=\"property\">table</span>[<span class=\"variable language_\">this</span>.<span class=\"title function_\">toStr</span>(key)];</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">keyValues</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">table</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">keys</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">keyValues</span>().<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">valuePair</span>) =&gt;</span> valuePair.<span class=\"property\">key</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">values</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">keyValues</span>().<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">valuePair</span>) =&gt;</span> valuePair.<span class=\"property\">value</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">forEach</span>(<span class=\"params\">callbackFn</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> valuePairs = <span class=\"variable language_\">this</span>.<span class=\"title function_\">keyValues</span>(); <span class=\"comment\">// &#123;1&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; valuePairs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> result = <span class=\"title function_\">callbackFn</span>(valuePairs[i].<span class=\"property\">key</span>, valuePairs[i].<span class=\"property\">value</span>); <span class=\"comment\">// &#123;3&#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (result === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>; <span class=\"comment\">// &#123;4&#125;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">size</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">table</span>).<span class=\"property\">length</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">size</span>() === <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">clear</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">table</span> = &#123;&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEmpty</span>()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> valuePairs = <span class=\"variable language_\">this</span>.<span class=\"title function_\">keyValues</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> objString = <span class=\"string\">`<span class=\"subst\">$&#123;valuePairs[<span class=\"number\">0</span>].toString()&#125;</span>`</span>; <span class=\"comment\">// &#123;1&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; valuePairs.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            objString = <span class=\"string\">`<span class=\"subst\">$&#123;objString&#125;</span>, <span class=\"subst\">$&#123;valuePairs[i].toString()&#125;</span>`</span>; <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> objString; <span class=\"comment\">// &#123;3&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/6.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%9B%86%E5%90%88/",
            "url": "https://jilinjl.github.io/data-structure/6.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%9B%86%E5%90%88/",
            "title": "JS数据结构-集合",
            "date_published": "2023-05-12T02:05:15.663Z",
            "content_html": "<h2 id=\"集合\"><a class=\"markdownIt-Anchor\" href=\"#集合\">#</a> 集合</h2>\n<p>❑ add (element)：向集合添加一个新元素。<br>\n❑ delete (element)：从集合移除一个元素。<br>\n❑ has (element)：如果元素在集合中，返回 true，否则返回 false。<br>\n❑ clear ()：移除集合中的所有元素。<br>\n❑ size ()：返回集合所包含元素的数量。它与数组的 length 属性类似。<br>\n❑ values ()：返回一个包含集合中所有值（元素）的数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Set集合  JS在ES2015加入了 Set 和 Map</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">❑ add(element)：向集合添加一个新元素。</span></span><br><span class=\"line\"><span class=\"comment\">❑ delete(element)：从集合移除一个元素。</span></span><br><span class=\"line\"><span class=\"comment\">❑ has(element)：如果元素在集合中，返回true，否则返回false。</span></span><br><span class=\"line\"><span class=\"comment\">❑ clear()：移除集合中的所有元素。</span></span><br><span class=\"line\"><span class=\"comment\">❑ size()：返回集合所包含元素的数量。它与数组的length属性类似。</span></span><br><span class=\"line\"><span class=\"comment\">❑ values()：返回一个包含集合中所有值（元素）的数组。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">$Set</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>=&#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">add</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">has</span>(element)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[element]=element</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">delete</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[element]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">has</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// return element in this.items    以下更好</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">hasOwnProperty</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>, element);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">clear</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>=&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">size</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// return Object.keys(this.items).length    这个太简单了</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>) &#123; <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123; <span class=\"comment\">// &#123;3&#125;</span></span><br><span class=\"line\">            count++;   <span class=\"comment\">// &#123;4&#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">values</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// return Object.values(this.items)      这个也是</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> values = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>) &#123; <span class=\"comment\">// &#123;1&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">          values.<span class=\"title function_\">push</span>(key); <span class=\"comment\">// &#123;2&#125;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> values;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 集合运算</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">❑ 并集：对于给定的两个集合，返回一个包含两个集合中所有元素的新集合。</span></span><br><span class=\"line\"><span class=\"comment\">❑ 交集：对于给定的两个集合，返回一个包含两个集合中共有元素的新集合。</span></span><br><span class=\"line\"><span class=\"comment\">❑ 差集：对于给定的两个集合，返回一个包含所有存在于第一个集合且不存在于第二个集合的元素的新集合。</span></span><br><span class=\"line\"><span class=\"comment\">❑ 子集：验证一个给定集合是否是另一集合的子集。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.add(1))</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.add(3))</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.add(&#x27;a&#x27;))</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.has(3))</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.size())</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(set.values())</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/5.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%8F%8C%E7%AB%AF%E9%93%BE%E8%A1%A8/",
            "url": "https://jilinjl.github.io/data-structure/5.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%8F%8C%E7%AB%AF%E9%93%BE%E8%A1%A8/",
            "title": "JS数据结构-双向链表",
            "date_published": "2023-05-12T02:05:15.660Z",
            "content_html": "<h2 id=\"双向链表\"><a class=\"markdownIt-Anchor\" href=\"#双向链表\">#</a> 双向链表</h2>\n<p>😫太麻烦了 next😁next😅next😐next😖再也不想写第二遍了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先定义节点类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = data</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">next</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义链表</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LinkedList</span> &#123;</span><br><span class=\"line\">    head = <span class=\"literal\">null</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1.添加节点</span></span><br><span class=\"line\">    <span class=\"title function_\">push</span>(<span class=\"params\">element</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(element)</span><br><span class=\"line\">        <span class=\"comment\">//判断是否为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">head</span> === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//链表为空 新加的节点就是头</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = node</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (current.<span class=\"property\">next</span>) &#123;       <span class=\"comment\">//while循环到最后一个节点</span></span><br><span class=\"line\">                current = current.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            current.<span class=\"property\">next</span> = node</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 2.删除指定位置的节点: xyz x.next = y.next 删除y</span></span><br><span class=\"line\">    <span class=\"title function_\">removeAt</span>(<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (position &gt;= <span class=\"number\">0</span> &amp;&amp; position &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (position === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> previous = <span class=\"literal\">null</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; position; i++) &#123;</span><br><span class=\"line\">                    previous = current        <span class=\"comment\">//不断往右移动</span></span><br><span class=\"line\">                    current = current.<span class=\"property\">next</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                previous.<span class=\"property\">next</span> = current.<span class=\"property\">next</span></span><br><span class=\"line\">                current.<span class=\"property\">next</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>--</span><br><span class=\"line\">            <span class=\"keyword\">return</span> current</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 3.在指定位置插入一个节点</span></span><br><span class=\"line\">    <span class=\"title function_\">insert</span>(<span class=\"params\">element, position</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(position&lt;<span class=\"number\">0</span>||position&gt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(element)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (position === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            node.<span class=\"property\">next</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = node</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position === <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">push</span>(element)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> previous = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i =<span class=\"number\">0</span>;i&lt;position-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">                previous = previous.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            node.<span class=\"property\">next</span> = previous.<span class=\"property\">next</span></span><br><span class=\"line\">            previous.<span class=\"property\">next</span> = node</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 4.获取指定位置的节点</span></span><br><span class=\"line\">    <span class=\"title function_\">getElementAt</span>(<span class=\"params\">index</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span> || index&gt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;index-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">                current = current.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> current</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 5.返回某个节点的下标</span></span><br><span class=\"line\">    <span class=\"title function_\">indexOf</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEqual</span>(current.<span class=\"property\">value</span>,element))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            current = current.<span class=\"property\">next</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ** 封装一个递归判断相等的函数 这里暂时先用JSON.stringify **</span></span><br><span class=\"line\">    <span class=\"title function_\">isEqual</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(a)===<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(b)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 6.从链表中删除一个元素</span></span><br><span class=\"line\">    <span class=\"title function_\">remove</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> index = <span class=\"variable language_\">this</span>.<span class=\"title function_\">indexOf</span>(element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeAt</span>(index)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 7.获取链表的大小</span></span><br><span class=\"line\">    <span class=\"title function_\">size</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">count</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 8.判断是否为空</span></span><br><span class=\"line\">    <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>===<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 9.重写toString方法输出所有值</span></span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>;i++)&#123;</span><br><span class=\"line\">            str+=<span class=\"title class_\">String</span>(current.<span class=\"property\">value</span>)</span><br><span class=\"line\">            current = current.<span class=\"property\">next</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>** 双向链表继承普通链表 ** 重写部分方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 双端链表节点继承Node</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DoublyNode</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Node</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(element)</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">prev</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 双端链表继承LinkedList</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DoublyLinkedList</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">LinkedList</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span> = <span class=\"literal\">null</span> </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">push</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">DoublyNode</span>(element)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>===<span class=\"literal\">null</span>)&#123; <span class=\"comment\">//第一个</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>=node</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>=node</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>.<span class=\"property\">next</span>=node</span><br><span class=\"line\">      node.<span class=\"property\">prev</span>=<span class=\"variable language_\">this</span>.<span class=\"property\">tail</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>=node</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">insert</span>(<span class=\"params\">element,position</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">DoublyNode</span>(element)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position&lt;<span class=\"number\">0</span>||position&gt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position===<span class=\"number\">0</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>===<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>=node</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>=node</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position===<span class=\"number\">0</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>.<span class=\"property\">prev</span>=node</span><br><span class=\"line\">      node.<span class=\"property\">next</span>=<span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>=node</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position===<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>.<span class=\"property\">next</span>=node</span><br><span class=\"line\">      node.<span class=\"property\">prev</span>=<span class=\"variable language_\">this</span>.<span class=\"property\">tail</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">tail</span>=node</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> previous = <span class=\"variable language_\">this</span>.<span class=\"title function_\">getElementAt</span>(position-<span class=\"number\">1</span>)   <span class=\"comment\">//之前封装好的方法</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> current = previous.<span class=\"property\">next</span></span><br><span class=\"line\">      node.<span class=\"property\">next</span> = current</span><br><span class=\"line\">      current.<span class=\"property\">prev</span>=node</span><br><span class=\"line\">      previous.<span class=\"property\">next</span> = node</span><br><span class=\"line\">      node.<span class=\"property\">prev</span>=previous</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">removeAt</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 与普通链表差别不大</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">getHead</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 与普通链表差别不大</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Db</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DoublyLinkedList</span>()</span><br><span class=\"line\"><span class=\"title class_\">Db</span>.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>)\t<span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"title class_\">Db</span>.<span class=\"title function_\">push</span>(<span class=\"number\">5</span>)\t<span class=\"comment\">// 1 &lt;&gt; 5</span></span><br><span class=\"line\"><span class=\"title class_\">Db</span>.<span class=\"title function_\">push</span>(<span class=\"number\">7</span>)\t<span class=\"comment\">// 1 &lt;&gt; 5 &lt;&gt; 7</span></span><br><span class=\"line\"><span class=\"title class_\">Db</span>.<span class=\"title function_\">insert</span>(<span class=\"number\">10</span>,<span class=\"number\">1</span>)  <span class=\"comment\">//t 1 &lt;&gt; 10 &lt;&gt; 5 &lt;&gt; 7</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"C:%5CUsers%5Cjilin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230302093305540.png\" alt=\"image-20230302093305540\"></p>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/4.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%93%BE%E8%A1%A8/",
            "url": "https://jilinjl.github.io/data-structure/4.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%93%BE%E8%A1%A8/",
            "title": "JS数据结构-链表",
            "date_published": "2023-05-12T02:05:15.656Z",
            "content_html": "<h2 id=\"链表\"><a class=\"markdownIt-Anchor\" href=\"#链表\">#</a> 链表</h2>\n<p>❑ push (element)：向链表尾部添加一个新元素。<br>\n❑ insert (element, position)：向链表的特定位置插入一个新元素。<br>\n❑ getElementAt (index)：返回链表中特定位置的元素。如果链表中不存在这样的元素，则返回 undefined。<br>\n❑ remove (element)：从链表中移除一个元素。<br>\n❑ indexOf (element)：返回元素在链表中的索引。如果链表中没有该元素则返回 - 1。<br>\n❑ removeAt (position)：从链表的特定位置移除一个元素。<br>\n❑ isEmpty ()：如果链表中不包含任何元素，返回 true，如果链表长度大于 0 则返回 false。<br>\n❑ size ()：返回链表包含的元素个数，与数组的 length 属性类似。<br>\n❑ toString ()：返回表示整个链表的字符串。由于列表项使用了 Node 类，就需要重写继承自 JavaScript 对象默认的 toString 方法，让其只输出元素的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先定义节点类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = data</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">next</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义链表</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LinkedList</span> &#123;</span><br><span class=\"line\">    head = <span class=\"literal\">null</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1.添加节点</span></span><br><span class=\"line\">    <span class=\"title function_\">push</span>(<span class=\"params\">element</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(element)</span><br><span class=\"line\">        <span class=\"comment\">//判断是否为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">head</span> === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//链表为空 新加的节点就是头</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = node</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (current.<span class=\"property\">next</span>) &#123;       <span class=\"comment\">//while循环到最后一个节点</span></span><br><span class=\"line\">                current = current.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            current.<span class=\"property\">next</span> = node</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 2.删除指定位置的节点: xyz x.next = y.next 删除y</span></span><br><span class=\"line\">    <span class=\"title function_\">removeAt</span>(<span class=\"params\">position</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (position &gt;= <span class=\"number\">0</span> &amp;&amp; position &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (position === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> previous = <span class=\"literal\">null</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; position; i++) &#123;</span><br><span class=\"line\">                    previous = current        <span class=\"comment\">//不断往右移动</span></span><br><span class=\"line\">                    current = current.<span class=\"property\">next</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                previous.<span class=\"property\">next</span> = current.<span class=\"property\">next</span></span><br><span class=\"line\">                current.<span class=\"property\">next</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>--</span><br><span class=\"line\">            <span class=\"keyword\">return</span> current</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 3.在指定位置插入一个节点</span></span><br><span class=\"line\">    <span class=\"title function_\">insert</span>(<span class=\"params\">element, position</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(position&lt;<span class=\"number\">0</span>||position&gt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(element)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (position === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            node.<span class=\"property\">next</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">head</span> = node</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position === <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">push</span>(element)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> previous = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i =<span class=\"number\">0</span>;i&lt;position-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">                previous = previous.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            node.<span class=\"property\">next</span> = previous.<span class=\"property\">next</span></span><br><span class=\"line\">            previous.<span class=\"property\">next</span> = node</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>++</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 4.获取指定位置的节点</span></span><br><span class=\"line\">    <span class=\"title function_\">getElementAt</span>(<span class=\"params\">index</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span> || index&gt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>) <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;index-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">                current = current.<span class=\"property\">next</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> current.<span class=\"property\">value</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 5.返回某个节点的下标</span></span><br><span class=\"line\">    <span class=\"title function_\">indexOf</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEqual</span>(current.<span class=\"property\">value</span>,element))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            current = current.<span class=\"property\">next</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ** 封装一个递归判断相等的函数 这里暂时先用JSON.stringify **</span></span><br><span class=\"line\">    <span class=\"title function_\">isEqual</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(a)===<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(b)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 6.从链表中删除一个元素</span></span><br><span class=\"line\">    <span class=\"title function_\">remove</span>(<span class=\"params\">element</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> index = <span class=\"variable language_\">this</span>.<span class=\"title function_\">indexOf</span>(element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">removeAt</span>(index)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 7.获取链表的大小</span></span><br><span class=\"line\">    <span class=\"title function_\">size</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">count</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 8.判断是否为空</span></span><br><span class=\"line\">    <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">count</span>===<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 9.重写toString方法输出所有值</span></span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> current = <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">count</span>;i++)&#123;</span><br><span class=\"line\">            str+=<span class=\"title class_\">String</span>(current.<span class=\"property\">value</span>)</span><br><span class=\"line\">            current = current.<span class=\"property\">next</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>试一下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> linkedlist = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">linkedlist.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;A&#x27;</span>)</span><br><span class=\"line\">linkedlist.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;B&#x27;</span>)</span><br><span class=\"line\">linkedlist.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;C&#x27;</span>)</span><br><span class=\"line\">linkedlist.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">linkedlist.<span class=\"title function_\">insert</span>(<span class=\"string\">&#x27;E&#x27;</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(linkedlist)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(linkedlist.<span class=\"title function_\">getElementAt</span>(<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(linkedlist.<span class=\"title function_\">getElementAt</span>(<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(linkedlist.<span class=\"title function_\">toString</span>())</span><br><span class=\"line\">/&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;head&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;A&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;next&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;B&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;next&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;E&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;next&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;C&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;next&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;D&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;next&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;count&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"string\">&quot;E&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;D&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;ABECD&quot;</span></span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/3.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97/",
            "url": "https://jilinjl.github.io/data-structure/3.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97/",
            "title": "JS数据结构-双端队列",
            "date_published": "2023-05-12T02:05:15.653Z",
            "content_html": "<h2 id=\"双端队列\"><a class=\"markdownIt-Anchor\" href=\"#双端队列\">#</a> 双端队列</h2>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addFront(element)</td>\n<td>该方法在双端队列前端添加新的元素。</td>\n</tr>\n<tr>\n<td>addBack(element)</td>\n<td>该方法在双端队列后端添加新的元素（实现方法和 Queue 类中的 enqueue 方法相同）。</td>\n</tr>\n<tr>\n<td>removeFront()</td>\n<td>该方法会从双端队列前端移除第一个元素（实现方法和 Queue 类中的 dequeue 方法相同）。</td>\n</tr>\n<tr>\n<td>removeBack()</td>\n<td>该方法会从双端队列后端移除第一个元素（实现方法和 Stack 类中的 pop 方法一样）。</td>\n</tr>\n<tr>\n<td>peekFront()</td>\n<td>该方法返回双端队列前端的第一个元素（实现方法和 Queue 类中的 peek 方法一样）。</td>\n</tr>\n<tr>\n<td>peekBack()</td>\n<td>该方法返回双端队列后端的第一个元素（实现方法和 Stack 类中的 peek 方法一样）。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Deque</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 一个对象来存储数据</span></span><br><span class=\"line\">    items = &#123;&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 记录队头元素的指针</span></span><br><span class=\"line\">    head = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\">// 记录队尾元素的指针</span></span><br><span class=\"line\">    last = <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_\">addFront</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>===<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;无法在队头添加了&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>;i&gt;=<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[i]=<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">addBack</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>] = e</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">last</span>++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">removeFront</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEmpty</span>())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> res = <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>]</span><br><span class=\"line\">      <span class=\"keyword\">delete</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>]</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>++</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">removeBack</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEmpty</span>())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> res = <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>]</span><br><span class=\"line\">      <span class=\"keyword\">delete</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>]</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">last</span>--</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">peekFront</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">peekBack</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">last</span> === <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">size</span>()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">last</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回文字符串判定</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 回文字符串判定</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> palindrome = <span class=\"keyword\">function</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> deq = <span class=\"keyword\">new</span> <span class=\"title class_\">Deque</span>()</span><br><span class=\"line\">  str = str.<span class=\"title function_\">toLowerCase</span>()   <span class=\"comment\">// 都转为小写(根据判定需求决定是否需要)</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> str)&#123;    <span class=\"comment\">// for..of 循环字符串</span></span><br><span class=\"line\">    deq.<span class=\"title function_\">addBack</span>(i)      <span class=\"comment\">//  全部加入队列中</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(deq.<span class=\"property\">size</span>&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(deq.<span class=\"title function_\">removeFront</span>()!=deq.<span class=\"title function_\">removeBack</span>())&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">palindrome</span>(<span class=\"string\">&#x27;abandon&#x27;</span>))   <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">palindrome</span>(<span class=\"string\">&#x27;adfgfda&#x27;</span>))        <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">palindrome</span>(<span class=\"string\">&#x27;ABccFFddFFccBa&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">palindrome</span>(<span class=\"string\">&#x27;厂水来自上海的海上自来水厂&#x27;</span>))  <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%98%9F%E5%88%97/",
            "url": "https://jilinjl.github.io/data-structure/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E9%98%9F%E5%88%97/",
            "title": "JS数据结构-队列",
            "date_published": "2023-05-12T02:05:15.650Z",
            "content_html": "<h2 id=\"队列\"><a class=\"markdownIt-Anchor\" href=\"#队列\">#</a> 队列</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不用数组是因为数组删除第一个元素,后面所有元素都会前移,效率很低</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Queue</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 一个对象来存储数据</span></span><br><span class=\"line\">  items = &#123;&#125;</span><br><span class=\"line\">  <span class=\"comment\">// 记录队头元素的指针</span></span><br><span class=\"line\">  head = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 记录队尾元素的指针</span></span><br><span class=\"line\">  last = <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">enqueue</span>(<span class=\"params\">item</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">last</span>]=item</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">last</span>++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">dequeue</span>(<span class=\"params\"></span>)&#123;    <span class=\"comment\">//判断队列为空则无法出队</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isEmpty</span>())&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>]</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">head</span>]</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">head</span>++</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">size</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">last</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">head</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">size</span>()===<span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"击鼓传花\"><a class=\"markdownIt-Anchor\" href=\"#击鼓传花\">#</a> 击鼓传花</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现击鼓传花游戏</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">game</span>(<span class=\"params\">arr,times</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> queue = <span class=\"keyword\">new</span> <span class=\"title class_\">Queue</span>()</span><br><span class=\"line\">    </span><br><span class=\"line\">    arr.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>)=&gt;</span>&#123;</span><br><span class=\"line\">      queue.<span class=\"title function_\">enqueue</span>(item)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//判定</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(queue.<span class=\"title function_\">size</span>()&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;i&lt;times;i++)&#123;</span><br><span class=\"line\">        queue.<span class=\"title function_\">enqueue</span>(queue.<span class=\"title function_\">dequeue</span>())</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`第<span class=\"subst\">$&#123;arr.length+<span class=\"number\">1</span>-queue.size()&#125;</span>轮,<span class=\"subst\">$&#123;queue.dequeue()&#125;</span> 出局了`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`获胜者是<span class=\"subst\">$&#123;queue.dequeue()&#125;</span>`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//参赛人员</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;肖斌&#x27;</span>,<span class=\"string\">&#x27;杜凯&#x27;</span>,<span class=\"string\">&#x27;吴磊&#x27;</span>,<span class=\"string\">&#x27;伍敏&#x27;</span>,<span class=\"string\">&#x27;黄诚&#x27;</span>]</span><br><span class=\"line\"><span class=\"title function_\">game</span>(arr,<span class=\"number\">4</span>) </span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">&quot;第1轮,黄诚 出局了&quot;</span></span><br><span class=\"line\"><span class=\"comment\">&quot;第2轮,肖斌 出局了&quot;</span></span><br><span class=\"line\"><span class=\"comment\">&quot;第3轮,吴磊 出局了&quot;</span></span><br><span class=\"line\"><span class=\"comment\">&quot;第4轮,伍敏 出局了&quot;</span></span><br><span class=\"line\"><span class=\"comment\">&quot;获胜者是杜凯&quot;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/data-structure/1.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%A0%88/",
            "url": "https://jilinjl.github.io/data-structure/1.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E6%A0%88/",
            "title": "JS数据结构-栈",
            "date_published": "2023-05-12T02:05:15.648Z",
            "content_html": "<h2 id=\"栈\"><a class=\"markdownIt-Anchor\" href=\"#栈\">#</a> 栈</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 栈结构 有pop push top size isEmpty方法</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Stack</span>&#123;</span><br><span class=\"line\">  items = []</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">pop</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">push</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">push</span>(x)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">top</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">at</span>(-<span class=\"number\">1</span>))\t<span class=\"comment\">// 也可以是 console.log(this.items[this.items.length-1])</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">size</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"property\">length</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">isEmpty</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"property\">length</span> === <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"进制转换\"><a class=\"markdownIt-Anchor\" href=\"#进制转换\">#</a> 进制转换</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">convert</span>(<span class=\"params\">num,scale</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 进制转换采用辗转相除法</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> remainder = <span class=\"number\">0</span>   <span class=\"comment\">//余数</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> stack = <span class=\"keyword\">new</span> <span class=\"title class_\">Stack</span>()</span><br><span class=\"line\">    <span class=\"keyword\">let</span> string = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> code = <span class=\"string\">&#x27;0123456789ABCDEF&#x27;</span> <span class=\"comment\">// 为了能转换 16进制 可以在字符串内放好A...F</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(num&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      remainder = num % scale</span><br><span class=\"line\">      stack.<span class=\"title function_\">push</span>(remainder)</span><br><span class=\"line\">      num = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(num/scale)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!stack.<span class=\"title function_\">isEmpty</span>())&#123;</span><br><span class=\"line\">      string += code[stack.<span class=\"title function_\">pop</span>()]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(string)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">convert</span>(<span class=\"number\">138</span>,<span class=\"number\">16</span>)\t <span class=\"comment\">// 8A</span></span><br><span class=\"line\"><span class=\"title function_\">convert</span>(<span class=\"number\">14</span>,<span class=\"number\">2</span>)\t<span class=\"comment\">// 1110</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "data-structure",
                "JS"
            ]
        }
    ]
}