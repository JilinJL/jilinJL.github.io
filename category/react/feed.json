{
    "version": "https://jsonfeed.org/version/1",
    "title": "寂林的小窝 • All posts by \"react\" category",
    "description": "飒飒西风满院栽,蕊寒香冷蝶难来",
    "home_page_url": "https://jilinJL.github.io",
    "items": [
        {
            "id": "https://jilinjl.github.io/react/TypeScript/",
            "url": "https://jilinjl.github.io/react/TypeScript/",
            "title": "TypeScript基础",
            "date_published": "2023-02-03T06:44:43.886Z",
            "content_html": "<h1 id=\"typescript基础\"><a class=\"markdownIt-Anchor\" href=\"#typescript基础\">#</a> TypeScript 基础</h1>\n<p><code>TS是JS的超集，最主要的变化就是引入了Type，对每个变量可以声明类型，类似于其他面向对象语言（java，C#）。</code></p>\n<h2 id=\"安装配置\"><a class=\"markdownIt-Anchor\" href=\"#安装配置\">#</a> 安装配置</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i typescript -g</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tsc xxx.ts 编译为js然后使用node运行</span><br></pre></td></tr></table></figure>\n<h2 id=\"类型明确\"><a class=\"markdownIt-Anchor\" href=\"#类型明确\">#</a> 类型明确</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">数据类型</th>\n<th style=\"text-align:left\">关键字</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">任意类型</td>\n<td style=\"text-align:left\">any</td>\n<td style=\"text-align:left\">声明为 any 的变量可以赋予任意类型的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">数字类型</td>\n<td style=\"text-align:left\">number</td>\n<td style=\"text-align:left\">双精度 <strong>64</strong> 位浮点值。它可以用来表示整数和分数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">字符串类型</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">一个字符系列，使用单引号（<strong>’</strong>）或双引号（<strong>&quot;</strong>）来表示字符串类型。以及模板字符串: let words: string =  <code>您好，今年是 $&#123; name &#125; 发布 $&#123; years + 1&#125; 周年</code> ；` |</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">布尔类型</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">表示逻辑值：true 和 false。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">数组类型</td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">声明变量为数组。 <code>// 在元素类型后面加上[] let arr: number[] = [1, 2]; 或者使用数组泛型 let arr: Array&lt;number&gt; = [1, 2];</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">元组</td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">元组类型用来表示<strong>已知元素数量</strong>和类型的数组，各元素的类型不必相同，<strong>对应位置的类型</strong>需要相同。 <code>let x: [string, number]; x = ['Runoob', 1];    // 运行正常 x = [1, 'Runoob'];    // 报错 console.log(x[0]);    // 输出 Runoob</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">枚举</td>\n<td style=\"text-align:left\">enum</td>\n<td style=\"text-align:left\">枚举类型用于定义数值集合。 <code>enum Color &#123;Red, Green, Blue&#125;; let c: Color = Color.Blue; console.log(c);    // 输出 2</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void</td>\n<td style=\"text-align:left\">void</td>\n<td style=\"text-align:left\">用于标识方法返回值的类型，表示该方法没有返回值。 <code>function hello(): void &#123;    alert(&quot;Hello Runoob&quot;); &#125;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">null</td>\n<td style=\"text-align:left\">null</td>\n<td style=\"text-align:left\">表示对象值缺失。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">undefined</td>\n<td style=\"text-align:left\">undefined</td>\n<td style=\"text-align:left\">用于初始化变量为一个未定义的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">never</td>\n<td style=\"text-align:left\">never</td>\n<td style=\"text-align:left\">never 是其它类型（包括 null 和 undefined）的子类型，代表从不会出现的值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"定义类型\"><a class=\"markdownIt-Anchor\" href=\"#定义类型\">#</a> 定义类型</h3>\n<h4 id=\"简单变量类型\"><a class=\"markdownIt-Anchor\" href=\"#简单变量类型\">#</a> 简单变量类型</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">sum</span>:<span class=\"built_in\">number</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">sum=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">// sum=&quot;a&quot;;   --Type &#x27;string&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"对象类型\"><a class=\"markdownIt-Anchor\" href=\"#对象类型\">#</a> 对象类型</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象的类型</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Student</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"built_in\">string</span>; <span class=\"comment\">//规定了Student对象内的字段类型</span></span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"built_in\">number</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">zs</span>:<span class=\"title class_\">Student</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;张三&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">19</span>,</span><br><span class=\"line\"><span class=\"comment\">//  age: &quot;19&quot;,  Type &#x27;string&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>可选属性</strong></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &#123;&#125; 指定对象内属性</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">student</span>: &#123;<span class=\"attr\">name</span>: <span class=\"built_in\">string</span>, <span class=\"attr\">age</span>: <span class=\"built_in\">number</span>&#125;</span><br><span class=\"line\">student = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;张三&quot;</span>,<span class=\"attr\">age</span>: <span class=\"number\">19</span>&#125;</span><br><span class=\"line\">student = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;李四&#x27;</span>&#125;    <span class=\"comment\">//缺少age属性,报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在属性名后面加上 ? ,表示属性是可选的</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">teacher</span>: &#123;<span class=\"attr\">name</span>: <span class=\"built_in\">string</span>, age?:<span class=\"built_in\">number</span>&#125;;</span><br><span class=\"line\">teacher = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;王老师&#x27;</span>,<span class=\"attr\">age</span>: <span class=\"number\">29</span>&#125;</span><br><span class=\"line\">teacher = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;张老师&#x27;</span>&#125;   <span class=\"comment\">//缺少age属性,但不会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//或者使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">master</span>: &#123;<span class=\"attr\">name</span>: <span class=\"built_in\">string</span>, [<span class=\"attr\">other</span>: <span class=\"built_in\">string</span>]: <span class=\"built_in\">any</span>&#125;</span><br><span class=\"line\">master = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;master&quot;</span>,<span class=\"attr\">other</span>:<span class=\"string\">&quot;其他随便添加也不会报错&quot;</span>,<span class=\"attr\">habits</span>: <span class=\"string\">&quot;football&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(master);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对于函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">add</span> = (<span class=\"params\">a:<span class=\"built_in\">number</span>,b:<span class=\"built_in\">number</span></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">add</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>));   <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"枚举类型\"><a class=\"markdownIt-Anchor\" href=\"#枚举类型\">#</a> 枚举类型</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//enum 枚举类型</span></span><br><span class=\"line\"><span class=\"keyword\">enum</span> sex&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Male</span> = <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Female</span> = <span class=\"number\">2</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> tom = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Master&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: sex.<span class=\"property\">Male</span>,      <span class=\"comment\">// 根据枚举中对应值,存储的实际上是 1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tom);       <span class=\"comment\">// &#123; name: &#x27;Master&#x27;, sex: 1 &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"组合类型\"><a class=\"markdownIt-Anchor\" href=\"#组合类型\">#</a> 组合类型</h3>\n<h4 id=\"聚合\"><a class=\"markdownIt-Anchor\" href=\"#聚合\">#</a> 聚合</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">MyBool</span> = <span class=\"literal\">true</span> | <span class=\"literal\">false</span>;  <span class=\"comment\">//自动归类为boolean</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"泛型\"><a class=\"markdownIt-Anchor\" href=\"#泛型\">#</a> 泛型</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">StringArray</span> = <span class=\"title class_\">Array</span>&lt;<span class=\"built_in\">string</span>&gt;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">NumberArray</span> = <span class=\"title class_\">Array</span>&lt;<span class=\"built_in\">number</span>&gt;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">ObjectWithNameArray</span> = <span class=\"title class_\">Array</span>&lt;&#123; <span class=\"attr\">name</span>: <span class=\"built_in\">string</span> &#125;&gt;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型断言\"><a class=\"markdownIt-Anchor\" href=\"#类型断言\">#</a> 类型断言</h3>\n<p>tips: unknown 类型比 any 类型更安全。</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">a</span>:<span class=\"built_in\">any</span>;</span><br><span class=\"line\">a=<span class=\"number\">10</span>;</span><br><span class=\"line\">a=<span class=\"string\">&quot;str&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">b</span>:<span class=\"built_in\">unknown</span>;</span><br><span class=\"line\">b=<span class=\"number\">10</span>;</span><br><span class=\"line\">b=<span class=\"string\">&quot;str&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>:<span class=\"built_in\">string</span>;</span><br><span class=\"line\">c=a;  <span class=\"comment\">//不会报错，但会把c也变成any类型.</span></span><br><span class=\"line\">c=b;  <span class=\"comment\">//会报错, Type &#x27;unknown&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br><span class=\"line\"></span><br><span class=\"line\">断言:</span><br><span class=\"line\">c = b <span class=\"keyword\">as</span> <span class=\"title class_\">String</span></span><br><span class=\"line\">c = &lt;<span class=\"built_in\">string</span>&gt;b;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译选项\"><a class=\"markdownIt-Anchor\" href=\"#编译选项\">#</a> 编译选项</h2>\n<p><code>ts转js的相关配置写在根目录的tsconfig.json中</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    tsconfig.json 是ts编译器的配置文件</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//include 表示哪些文件需要被编译</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//exclude 不需要编译的 默认值[&quot;node_modules&quot;,&quot;bower_components&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 指定编译版本</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES6&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 指定模块化的标准</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES2015&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 指定使用的库</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;lib&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;DOM&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;ES6&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>    </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 指定编译后文件所在目录      </span></span><br><span class=\"line\">        <span class=\"attr\">&quot;outDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;dist&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置outFile后所有全局作用域中的代码会合并到一个文件</span></span><br><span class=\"line\">        <span class=\"comment\">// &quot;outFile&quot;: &quot;./dist/app.js&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 是否编译JS文件</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;allowJs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 是否检查js代码语法规范</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;checkJs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 是否移除注释</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;removeComments&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 不生成编译文件</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;noEmit&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 不编译有错误的文件</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;noEmitOnError&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 总是按照严格模式,默认为false</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;alwaysStrict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 不允许隐式any</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;noImplicitAny&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 不允许不明类型的this</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;noImplicitThis&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 严格检查空值</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;strictNullChecks&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"打包配置\"><a class=\"markdownIt-Anchor\" href=\"#打包配置\">#</a> 打包配置</h2>\n<p><strong>使用 webpack 打包</strong></p>\n<blockquote>\n<ol>\n<li>初始化</li>\n<li>安装对应包工具</li>\n<li>新建配置 webpack.config.js</li>\n<li>新建配置 tsconfig.json</li>\n<li>配置 package.json</li>\n<li>执行 npm run build 开始打包</li>\n</ol>\n</blockquote>\n<p>首先进入项目目录，初始化</p>\n<blockquote>\n<p>npm init -y</p>\n</blockquote>\n<p>然后安装主要包</p>\n<blockquote>\n<p>npm i -D webpack webpack-cli typescript ts-loader</p>\n</blockquote>\n<p>新建<mark> webpack</mark> 配置文件  <code>webpack.config.js</code></p>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202302031134232.png\" alt=\"image-20230203113422164\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// webpack.config.js</span></span><br><span class=\"line\"><span class=\"comment\">// 引入路径包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack的所有配置都写在 module.exports中</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 指定入口文件</span></span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&quot;./src/index.ts&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 指定打包文件所在目录</span></span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 指定打包文件的目录</span></span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&quot;dist&quot;</span>),</span><br><span class=\"line\">        <span class=\"comment\">// 打包后的文件名</span></span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&quot;bundle.js&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//指定webpack打包时使用的模块</span></span><br><span class=\"line\">    <span class=\"attr\">module</span>:&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 指定打包的规则</span></span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//test是指定的文件规则</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.ts$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: <span class=\"string\">&quot;ts-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"comment\">// 排除文件</span></span><br><span class=\"line\">                <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>新建 TS 配置文件  <code>tsconfig.json</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES2015&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES2015&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;strict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>在 webpack 的  <code>package.json</code>  中配置 scripts, 加上一句</p>\n<blockquote>\n<p>“build”: “webpack”</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;webpack&quot;</span>  <span class=\"comment\">//加入这一句,直接运行build打包</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<p>最后执行 npm run build 进行打包 (这里报了一个 warning)</p>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202302031151111.png\" alt=\"image-20230203115112069\"></p>\n<p>原因是没有指定 mode, 在 webpack.config.js 中设置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/app.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;main.js&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span> <span class=\"comment\">// 设置mode</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>解决～</p>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202302031412974.png\" alt=\"image-20230203141229926\"></p>\n<h2 id=\"babel\"><a class=\"markdownIt-Anchor\" href=\"#babel\">#</a> Babel</h2>\n<p>在 <code>webpack.config.js</code>  中添加以下 loader 配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">module.exports</span> <span class=\"string\">=</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">module:</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules:</span> [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test:</span> <span class=\"string\">/.js$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">exclude:</span> <span class=\"string\">/node_modules/</span>,</span><br><span class=\"line\">        <span class=\"attr\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">loader:</span> <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">options:</span> &#123;</span><br><span class=\"line\">              <span class=\"attr\">presets:</span> [<span class=\"string\">&quot;@babel/preset-env&quot;</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后安装相应的依赖：babel-loader、@babel/core、@babel/preset-env:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>上面是将 babel 的 preset 参数配置在了 webpack.config.js 中，实际上也可以将它按照 babel 配置文件的原则提取出来单独一个 babel.config.json 文件，效果是一样的。</p>\n</blockquote>\n<p>这样就完成了在 webpack 项目中添加 Babel 转换 ES6 + 代码的功能。在 webpack 打包的过程中，会将源代码经由 <code>babel-loader</code>  处理转换为目标代码，这一执行过程对我们来只说是打包时 “顺势而为” 的，我们再也不用关心 Babel 本身的命令细节了。</p>\n",
            "tags": [
                "TS"
            ]
        },
        {
            "id": "https://jilinjl.github.io/react/React/",
            "url": "https://jilinjl.github.io/react/React/",
            "title": "React基础",
            "date_published": "2022-11-30T04:53:03.811Z",
            "content_html": "<h1 id=\"react\"><a class=\"markdownIt-Anchor\" href=\"#react\">#</a> React</h1>\n<p><strong>什么是 React?</strong></p>\n<p>React 是一个用于构建用户界面的 JavaScript 库。React 主要用于构建 UI</p>\n<p><strong>为什么学习 React？</strong></p>\n<p>它引入了一种新的方式来处理浏览器 DOM。那些需要手动更新 DOM、费力地记录每一个状态的日子一去不复返了 —— 这种老旧的方式既不具备扩展性，又很难加入新的功能，就算可以，也是有着冒着很大的风险。React 使用很新颖的方式解决了这些问题。你只需要声明地定义各个时间点的用户界面，而无序关系在数据变化时，需要更新哪一部分 DOM。在任何时间点，React 都能以最小的 DOM 修改来更新整个应用程序。</p>\n<p><strong>特点如下</strong></p>\n<ol>\n<li>采用组件化模式、声明式编码，提高了开发效率以及组件复用率；</li>\n<li>在 React Native 中可以使用 React 语法进行 <code>移动端开发</code> ；</li>\n<li>使用  <code>虚拟DOM</code>  + Diffing 算法，尽量减少与真实 DOM 的交互；</li>\n</ol>\n<p><strong>前置 JS 知识</strong></p>\n<p>判断 this 指向，class 类，ES6，npm 包，原型、原型链，数组操作，模块化</p>\n<h2 id=\"jsx\"><a class=\"markdownIt-Anchor\" href=\"#jsx\">#</a> jsx</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>hello react<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--准备好一个“容器”--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span>?<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--引入核心库--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/react/16.4.0/umd/react.development.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/react-dom/16.4.0/umd/react-dom.development.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/babel-standalone/6.26.0/babel.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/babel&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">//1.创建虚拟DOM</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> <span class=\"variable constant_\">VDOM</span> = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">//2.渲染虚拟DOM到页面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"variable constant_\">VDOM</span>, <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;demo&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>需要注意的点</strong>：</p>\n<blockquote>\n<ol>\n<li>\n<p>&lt;script&gt; 标签内要写 ‘text/babel’</p>\n</li>\n<li>\n<p>const VDOM = &lt;h1&gt;hello…&lt;h1&gt;  这里不要加 “” 或者  ‘’</p>\n</li>\n</ol>\n</blockquote>\n<p><mark>为什么 React 要求用 JSX 而不是 JS ？？</mark></p>\n<p>如果需要用到标签嵌套，jsx 更方便，而 js 创建虚拟 dom 会非常繁琐</p>\n<h3 id=\"真实dom和虚拟dom\"><a class=\"markdownIt-Anchor\" href=\"#真实dom和虚拟dom\">#</a> 真实 DOM 和虚拟 DOM</h3>\n<p><img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202302051427078.png\" alt=\"image-20221130104457572\"></p>\n<blockquote>\n<p>关于虚拟 DOM</p>\n<p>​    1. 本质上是 Object 对象</p>\n<p>​    2. 虚拟 DOM 比较 &quot;轻&quot;, 真实 DOM 比较 &quot;重&quot;, 因为虚拟 DOM 是 React 内部在用，无需真实 DOM 上那么多属性</p>\n<pre><code>3. 虚拟DOM最终会被React转化为真实DOM,呈现在页面上\n</code></pre>\n</blockquote>\n<h3 id=\"jsx语法规则\"><a class=\"markdownIt-Anchor\" href=\"#jsx语法规则\">#</a> JSX 语法规则</h3>\n<ul>\n<li>​        读取数据要用</li>\n<li>​        读取 class 属性要用 className=xxx 而非 class= ‘’</li>\n<li>​        添加内联样式 style=&lt;!–swig￼1–&gt;, 即第一个 {} 内写一个样式对象 {}</li>\n<li>​        虚拟 DOM 只能有一个根标签</li>\n<li>​        标签必须闭合 <input type=\"xxx\" />或者 <input type=\"hidden\"></input></li>\n<li>​        标签渲染\n<ul>\n<li>1. 若标签首字母小写，则将标签转为 html 中对应的同名标签，若 html 无对应标签，则报错；</li>\n<li>2. 若首字母大写，则 react 会渲染对应的组件，若没有，则报错；</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"组件化\"><a class=\"markdownIt-Anchor\" href=\"#组件化\">#</a> 组件化</h2>\n<h3 id=\"安装插件\"><a class=\"markdownIt-Anchor\" href=\"#安装插件\">#</a> 安装插件</h3>\n<p><strong>React Developer Tools</strong><br>\n<img data-src=\"https://gitee.com/jilinJL/my-pictures/raw/master/img/202302051423490.png\" alt=\"image-20230205142139780\"></p>\n<h2 id=\"应用\"><a class=\"markdownIt-Anchor\" href=\"#应用\">#</a> 应用</h2>\n",
            "tags": [
                "JS"
            ]
        }
    ]
}